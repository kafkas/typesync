{
  "$ref": "#/definitions/v0.13",
  "definitions": {
    "v0.13": {
      "type": "object",
      "properties": { "$schema": { "type": "string" } },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "const": "alias",
                "description": "A literal field indicating that this is an 'alias' model."
              },
              "docs": {
                "type": "string",
                "description": "Optional documentation for the model."
              },
              "type": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "anyOf": [
                                          {
                                            "anyOf": [
                                              {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "const": "any",
                                                    "description": "Any type."
                                                  },
                                                  {
                                                    "type": "string",
                                                    "const": "unknown",
                                                    "description": "An unknown type."
                                                  },
                                                  {
                                                    "type": "string",
                                                    "const": "nil",
                                                    "description": "A nil type."
                                                  },
                                                  {
                                                    "type": "string",
                                                    "const": "string",
                                                    "description": "A string type."
                                                  },
                                                  {
                                                    "type": "string",
                                                    "const": "boolean",
                                                    "description": "A boolean type."
                                                  },
                                                  {
                                                    "type": "string",
                                                    "const": "int",
                                                    "description": "An integer type."
                                                  },
                                                  {
                                                    "type": "string",
                                                    "const": "double",
                                                    "description": "A double type."
                                                  },
                                                  {
                                                    "type": "string",
                                                    "const": "timestamp",
                                                    "description": "A timestamp type."
                                                  }
                                                ],
                                                "description": "A primitive type"
                                              },
                                              {
                                                "anyOf": [
                                                  {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "literal"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "description": "The literal value."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "value"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "A string literal type"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "const": "literal"
                                                          },
                                                          "value": {
                                                            "type": "integer",
                                                            "description": "The literal value."
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "value"
                                                        ],
                                                        "additionalProperties": false,
                                                        "description": "An int literal type"
                                                      }
                                                    ],
                                                    "description": "A string literal type"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "const": "literal"
                                                      },
                                                      "value": {
                                                        "type": "boolean",
                                                        "description": "The literal value."
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "value"
                                                    ],
                                                    "additionalProperties": false,
                                                    "description": "A boolean literal type"
                                                  }
                                                ],
                                                "description": "A literal type"
                                              }
                                            ],
                                            "description": "A primitive type"
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "enum"
                                                  },
                                                  "members": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "label": {
                                                          "type": "string",
                                                          "description": "The label for this enumeration item."
                                                        },
                                                        "value": {
                                                          "type": "string",
                                                          "description": "The value for this enumeration item."
                                                        }
                                                      },
                                                      "required": [
                                                        "label",
                                                        "value"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "A list containing the enumeration members."
                                                  }
                                                },
                                                "required": ["type", "members"],
                                                "additionalProperties": false,
                                                "description": "A string enum type"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "enum"
                                                  },
                                                  "members": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "label": {
                                                          "type": "string",
                                                          "description": "The label for this enumeration item."
                                                        },
                                                        "value": {
                                                          "type": "integer",
                                                          "description": "The value for this enumeration item."
                                                        }
                                                      },
                                                      "required": [
                                                        "label",
                                                        "value"
                                                      ],
                                                      "additionalProperties": false
                                                    },
                                                    "description": "A list containing the enumeration members."
                                                  }
                                                },
                                                "required": ["type", "members"],
                                                "additionalProperties": false,
                                                "description": "An int enum type"
                                              }
                                            ],
                                            "description": "An enum type"
                                          }
                                        ],
                                        "description": "A primitive type"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "tuple"
                                          },
                                          "elements": {
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0"
                                                },
                                                {
                                                  "type": "string",
                                                  "description": "An alias type."
                                                }
                                              ],
                                              "description": "Any valid type."
                                            },
                                            "description": "An ordered list of types that comprise this tuple."
                                          }
                                        },
                                        "required": ["type", "elements"],
                                        "additionalProperties": false,
                                        "description": "A tuple type"
                                      }
                                    ],
                                    "description": "A primitive type"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "list"
                                      },
                                      "elementType": {
                                        "anyOf": [
                                          {
                                            "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0"
                                          },
                                          {
                                            "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/1/properties/elements/items/anyOf/1"
                                          }
                                        ],
                                        "description": "The type representing each element in this list."
                                      }
                                    },
                                    "required": ["type", "elementType"],
                                    "additionalProperties": false,
                                    "description": "A list type"
                                  }
                                ],
                                "description": "A primitive type"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": { "type": "string", "const": "map" },
                                  "valueType": {
                                    "anyOf": [
                                      {
                                        "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0"
                                      },
                                      {
                                        "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/1/properties/elements/items/anyOf/1"
                                      }
                                    ],
                                    "description": "The type representing the values in this map. The keys in a map are always strings."
                                  }
                                },
                                "required": ["type", "valueType"],
                                "additionalProperties": false,
                                "description": "An arbitrary mapping from strings to any valid types."
                              }
                            ],
                            "description": "A primitive type"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "const": "object" },
                              "fields": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/1/properties/elements/items"
                                    },
                                    "optional": {
                                      "type": "boolean",
                                      "description": "Whether this field is optional. Defaults to false."
                                    },
                                    "readonly": {
                                      "type": "boolean",
                                      "description": "Whether this field is read-only. Defaults to false. This information is used by the Security Rules generator when producing validators that detect whether a read-only field has been affected by a write."
                                    },
                                    "docs": {
                                      "type": "string",
                                      "description": "Optional documentation for the object field."
                                    }
                                  },
                                  "required": ["type"],
                                  "additionalProperties": false,
                                  "description": "An object field."
                                },
                                "description": "The fields that belong to this object."
                              },
                              "additionalFields": {
                                "type": "boolean",
                                "description": "Whether to allow adding arbitrary fields to the object. This currently does not have an effect on Swift output."
                              }
                            },
                            "required": ["type", "fields"],
                            "additionalProperties": false,
                            "description": "An object type."
                          }
                        ],
                        "description": "A primitive type"
                      },
                      {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "const": "union" },
                              "discriminant": {
                                "type": "string",
                                "minLength": 1
                              },
                              "variants": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/1"
                                    },
                                    {
                                      "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/1/properties/elements/items/anyOf/1"
                                    }
                                  ],
                                  "description": "An object type."
                                }
                              }
                            },
                            "required": ["type", "discriminant", "variants"],
                            "additionalProperties": false,
                            "description": "A discriminated union type."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": { "type": "string", "const": "union" },
                              "variants": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/1/properties/elements/items"
                                }
                              }
                            },
                            "required": ["type", "variants"],
                            "additionalProperties": false,
                            "description": "A simple union type."
                          }
                        ],
                        "description": "A union type."
                      }
                    ],
                    "description": "A primitive type"
                  },
                  {
                    "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/0/anyOf/1/properties/elements/items/anyOf/1"
                  }
                ],
                "description": "The type that this model is an alias of."
              }
            },
            "required": ["model", "type"],
            "additionalProperties": false,
            "description": "An alias model"
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "const": "document",
                "description": "A literal field indicating that this is a 'document' model."
              },
              "docs": {
                "type": "string",
                "description": "Optional documentation for the model."
              },
              "type": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "const": "object" },
                  "fields": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/v0.13/additionalProperties/anyOf/0/properties/type/anyOf/0/anyOf/0/anyOf/1/properties/fields/additionalProperties"
                    },
                    "description": "The fields that belong to this object."
                  },
                  "additionalFields": {
                    "type": "boolean",
                    "description": "Whether to allow adding arbitrary fields to the object. This currently does not have an effect on Swift output."
                  }
                },
                "required": ["type", "fields"],
                "additionalProperties": false,
                "description": "The type that represents the shape of the document model. Must be an 'object' type."
              },
              "path": {
                "type": "string",
                "minLength": 1,
                "description": "An exact or generic path to the document. Must be a string consisting of path segments separated by a '/' (slash). Each segment can either be a literal ID or a generic ID of the collection or document. A literal ID is a plain string, such as 'users', while a generic ID must be enclosed in curly braces (e.g. '{userId}')."
              }
            },
            "required": ["model", "type", "path"],
            "additionalProperties": false,
            "description": "A document model."
          }
        ]
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
